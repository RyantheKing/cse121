#!/usr/bin/env python3

import RPi.GPIO as GPIO
import time
import sys

# ChatGPT link https://chatgpt.com/share/d01ec6a4-4b10-4875-9c17-2cd909e838e3

# Morse code dictionary
MORSE_CODE_DICT = {
    'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.', 'F': '..-.',
    'G': '--.', 'H': '....', 'I': '..', 'J': '.---', 'K': '-.-', 'L': '.-..',
    'M': '--', 'N': '-.', 'O': '---', 'P': '.--.', 'Q': '--.-', 'R': '.-.',
    'S': '...', 'T': '-', 'U': '..-', 'V': '...-', 'W': '.--', 'X': '-..-',
    'Y': '-.--', 'Z': '--..', '0': '-----', '1': '.----', '2': '..---', 
    '3': '...--', '4': '....-', '5': '.....', '6': '-....', '7': '--...', 
    '8': '---..', '9': '----.'
}

# Constants
BASE = 0.05
DOT_DURATION = BASE    # Duration of a dot in seconds
DASH_DURATION = BASE*3 # Duration of a dash in seconds
SYMBOL_SPACE = BASE    # Space between symbols in a character
CHAR_SPACE = BASE*3    # Space between characters
WORD_SPACE = BASE*7    # Space between words
NEWLINE_SPACE = BASE*14

# GPIO setup
LED_PIN = 18
GPIO.setmode(GPIO.BCM)
GPIO.setup(LED_PIN, GPIO.OUT)

def dot():
    GPIO.output(LED_PIN, GPIO.HIGH)
    time.sleep(DOT_DURATION)
    GPIO.output(LED_PIN, GPIO.LOW)
    time.sleep(SYMBOL_SPACE)

def dash():
    GPIO.output(LED_PIN, GPIO.HIGH)
    time.sleep(DASH_DURATION)
    GPIO.output(LED_PIN, GPIO.LOW)
    time.sleep(SYMBOL_SPACE)

def flash_message(message):
    for char in message.upper():
        if char == ' ':
            time.sleep(WORD_SPACE)
        elif char in MORSE_CODE_DICT:
            for symbol in MORSE_CODE_DICT[char]:
                if symbol == '.':
                    dot()
                elif symbol == '-':
                    dash()
            time.sleep(CHAR_SPACE)

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print('Usage: ./lab5_1 <repetitions> "<message>"')
        sys.exit(1)

    repetitions = int(sys.argv[1])
    message = sys.argv[2]

    try:
        for _ in range(repetitions):
            flash_message(message)
            time.sleep(NEWLINE_SPACE)  # Space between repetitions
    except KeyboardInterrupt:
        pass
    finally:
        GPIO.cleanup()

